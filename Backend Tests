***Backend Tests***

***Log Detail Files:***
**Log Detail (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/LogDetailFiles/LogDetail.java)**
@Test
public void testSettersAndGetters() {
  LogDetail logDet = new LogDetail();
  logDet.setGlobal_instance_id("12345");
  assert logDet.getGlobal_instance_id().equals("12345");
  logDet.setBusiness_domain("domainA");
  assert logDet.getBusiness_domain().equals("domainA");
  #continue for each class field within the LogDetail class
  }

**Log Detail Repository (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/LogDetailFiles/LogDetailRepository.java)**
#insert tests here


***Log Event Files:***
**Log Event (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/LogEventFiles/LogEvent.java)**
@Test
public void testSettersAndGetters() {
  LogEvent logEv = new LogEvent();
  logDet.setGlobal_instance_id("12345");
  assert logDet.getGlobal_instance_id().equals("12345");
  logDet.setBusiness_domain("domainA");
  assert logDet.getBusiness_domain().equals("domainA");
  #continue for each class field within the LogEvent class
  }

**Log Event Filter Specification (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/LogEventFiles/LogEventFilterSpecification.java)**
#test toPredicate for all possiblities
#insert other tests here

**Log Event Repository (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/LogEventFiles/LogEventRepository.java)**
#insert tests here

**Log Event Search Criteria (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/LogEventFiles/LogEventsSearchCriteria.java)**
@Test
public void testSettersAndGetters() {
  LogEventsSearchCriteria logESC = new LogEventsSearchCriteria();
  logESC.setSeverities(["sever1", "sever2"]);
  assert logESC.getSeverities[0].equals("sever1");
  assert logESC.getSeverities[1].equals("sever2");
  logESC.setStartTime(new Timestamp(25000));
  assert logESC.getStartTime() == 25000;
  #continue for each class field within the LogEventsSearchCriteria class
  }


***Main Controller (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/MainController.java)***
#insert tests here


***Priority Map Class (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/PriorityMap.java)***
#test get here or in other section
#insert tests here


***Severity Map Class (320-S22-Track2/backend.server/src/main/java/com/clog/Clog/SeverityMap.java)***
#test getRange here or in other section
#insert tests here


***General Initial Testing Outline:***
**Database Connection**
#Is connection established and configured from all ISO New England Application Adapters to data sink?
#Is connection established and configured from data sink to MySQL database?
#Is the call to the MySQL database being formulated correctly to access data correctly?
#Is the API call to get the data from the data sink correctly retrieving the data?
#Is all data being returned correctly from MySQL database to Spring Boot server?
**Front End Connection**
#Is connection established and valid for all necessary functionality from the Landing View to the Spring Boot server?
#Is all data being processed and piped correctly from Spring Boot server to the Landing View?
#Is connection established and valid for all necessary functionality from the Log View to the Spring Boot server?
#Is all data being processed and piped correctly from Spring Boot server to the Log View?
#Is connection established and valid for all necessary functionality from the Business Process View to the Spring Boot server?
#Is all data being processed and piped correctly from Spring Boot server to the Business Process View?
**Capacity and Speed**
#Is data available on the Log View in an appropriate time constraint?
#Is data available on the Landing View in an appropriate time constraint?
#Is data available on the Business Process View in an appropriate time constraint?
#Are all logs being pushed from database to frontend in an appropriate time constraint?
**Correctness**
#Is all data stored and transferred correctly to the frontend?
